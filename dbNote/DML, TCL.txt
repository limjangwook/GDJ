* DML 데이터 조작어
  - 정의된 데이터베이스에 새뢔운 레코드(row, tuple)을 삽입/수정/삭제(delete)하는 등의 역할을 하는 sql문.
  - 종류    INSERT   : 레코드(row) 삽입   INSERT INTO 테이블이름(칼럼1, 칼럼2, ...) VALUES(값1, 값2, ...);     > 회원 가입, 게시글 작성 등
             UPDATE  : 레코드(row) 갱신   UPDATE 테이블이름 SET 칼럼1= 값1, 칼럼2= 값2, ... WHERE 조건식; > 특정 칼럼의 값 수정. where조건식은 반드시 넣어야 한다. where code = 1;  > code가 1인 column이라는 조건식. 등호는 하나만.
             DELETE   : 레코드(row) 삭제   DELETE FROM 테이블이름 WHERE 조건식;
                 ㄴ WHERE절은 생략이 가능한데, 생략하면 전체 레코드가 삭제 된다. 따라서 생략하는 경우는 거ㅓㅓ의 없다고 보면 된다.

* TRANSACTION 관리
  - 트랜잭션이란? DB에서 처리되는 여러 SQL 명령들을 하나의 작업 단위로 처리하는 것.
     EX) 계좌 이체. A가 돈을 빼서 B의 계좌로 돈을 보낸다 -> 두 개의 계좌에 잔액 변경(UPDATE) 되는 케이스가 2개 -> 이걸 하나의 트랜잭션으로 본다.
     DML을 2개 이상을 처리할 때 2개의 문장을 하나의 트랜잭션으로 관리한다.
  - INSERT/UPDATE/DELETE은 작업 취소 가능.
    작업을 했어도 100% 완료된 것이 아니라서 DB에 저장된 상태가 아님. 작업 후에 COMMIT까지 해야 작업이 완료된 상태가 된다.

  * TCL(Transaction Control Language)
     COMMIT   : 변경된 작업 내용을 영구적으로 저장하고 트랜잭션 종료. (DB에 완전히 저장)
     ROLLBACK : 변경된 작업 내용을 모두 취소하고 트랜잭션 종료. (IN, UP, DEL 작업한걸 모두 취소)
       └> 어느 하나라도 실패하면 변경 작업 자체를 실패하게끔 하는게 ROLLBACK

* 회원탈퇴(하나의 서비스)
    회원             : DELETE
    탈퇴자 테이블 : INSERT
  ----------------------------------
    2개의 DML -> 트랜잭션으로 관리해야 함.
    그렇지 않으면 DELETE했는데 INSERT가 안 되거나, DELETE를 안 했는데 INSERT가 되어있거나 하는 상황 발생.
    그래서 어느 하나라도 실패하면 변경작업 자체를 실패하게끔 하도록 하는게 ROLL BACK)


 *★★★★★*
                                      DDL                                             DML
대상:                            DB object                                        ROW(행)
                             (테이블, 사용자, ..)                             (RECORD, TUPLE)
커밋유무:                          X                                                  O 
         	          (작업취소 불가 > 자동COMMIT)           (작업취소 가능 > COMMIT 필요)