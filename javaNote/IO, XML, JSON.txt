* IO
= file =

내용이 없는 파일은 만들 순 있는데 (my.txt)
내용을 채울 때는 파일클래스를 만들 순 없당.
file클래스로 주로 디렉토리(폴더)를 만드는걸 주로 함


<자바 기준 입/출력>
자바로 읽어주면 입력스트림
(키보드의 입력 스트림 : system.in)
자바로 보내주면 출력스트림
(모니터의 출력 스트림: system.out)

동시에 처리할 수 없어서(양방향 불가)
입력/출력 구분함.

스트림 구분
바이트 스트림/ 문자 스트림
->영문으로만 구성된 텍스트 파일은 바이트 스트림으로 처리 가능하다. 영문 1글자는 1바이트이기 때문에 1글자씩 처리 가능
->but 한글은 1글자가 2-3바이트기 때문에 반드시 문자스트림을 사용해야 한다.

//////////////////////////////////////////////////////////////////////////////////////////////

= writer =

@ XML (product.xml)

Element product
  Element number
  Elemnet name
  ...

product.appendChild(number);
product.appendChild(name);
...
(└ element를 추가하는 방식)
product(부모) 안에 Child(자식) number를 추가한다는 것.

element는 각각의 태그를 의미한다



@ JSON (product.json)

object (1개의 객체)
{ + 공백 + "string" + 공백 + : + value(값) 
값 적고 안 끝나면 ,(콤마) 찍고 다시 돌아가서
,공백 + "string" + 공백 + : + value(값) }

{
 "name" : "kim", 
 "age" : "20"
}

------------------------ json은 이렇게 생겼다
array (배열로 만들 때는 [ ] 대괄호 사용)
각 객체는 컴마로 구분
[
   {
    "number": "100",
    "name": "새우깡",
    "price": "1500"
    },
   {
    "number": "101",
    "name": "양파링",
    "price": "2000"
    },
   {
    "number": "102",
    "name": "홈런볼",
    "price": "2500"
    }
]

-------- XML -> JSON ---------

    XML    ->         JSON
  
products ->  [
product   ->     {
number   ->       "number":100,
name      ->       "name":"새우깡",
price      ->        "price":1500
                      },
                     {
                       "number":101,
                       "name":"양파링",
                       "price":2000
                     }
                  ]
   



