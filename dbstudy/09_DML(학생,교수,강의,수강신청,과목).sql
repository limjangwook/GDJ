DROP TABLE LECTURE;
DROP TABLE ENROLL;
DROP TABLE COURSE;
DROP TABLE STUDENT;
DROP TABLE PROFESSOR;

CREATE TABLE PROFESSOR(
    PRO_NO    VARCHAR2(5 BYTE)  NOT NULL,
    PRO_NAME  VARCHAR2(15 BYTE) NULL,
    PRO_MAJOR VARCHAR2(20 BYTE) NULL
);

CREATE TABLE STUDENT(
    STU_NO     VARCHAR2(5 BYTE)  NOT NULL,
    STU_NAME   VARCHAR2(15 BYTE) NULL,
    STU_ADR    VARCHAR2(20 BYTE) NULL,
    STU_CLASS  NUMBER(1)         NULL,
    PRO_NO    VARCHAR2(5 BYTE)  NOT NULL
);

CREATE TABLE COURSE(
    COURSE_NO   NUMBER            NOT NULL,
    COURSE_NAME VARCHAR2(30 BYTE) NULL,
    GRADE       VARCHAR2(3 BYTE)  NULL
);

CREATE TABLE ENROLL(
    ENROLL_NO NUMBER           NOT NULL,
    STU_NO    VARCHAR2(5 BYTE) NOT NULL,
    COURSE_NO NUMBER           NOT NULL,
    APP_DATE  DATE             NULL
);

CREATE TABLE LECTURE(
    LEC_NO    VARCHAR2(5 BYTE) NOT NULL,
    PRO_NO    VARCHAR2(5 BYTE) NOT NULL,
    ENROLL_NO NUMBER           NOT NULL, 
    LEC_NAME  VARCHAR2(30 BYTE)    NULL,
    LEC_ROOM  VARCHAR2(30 BYTE)    NULL
);

ALTER TABLE STUDENT
    ADD CONSTRAINT PK_STUDENT PRIMARY KEY(STU_NO);
ALTER TABLE PROFESSOR
    ADD CONSTRAINT PK_PORFESSOR PRIMARY KEY(PRO_NO);
ALTER TABLE COURSE
    ADD CONSTRAINT PK_COURSE PRIMARY KEY(COURSE_NO);
ALTER TABLE ENROLL
    ADD CONSTRAINT PK_ENROLL PRIMARY KEY(ENROLL_NO);
ALTER TABLE LECTURE
    ADD CONSTRAINT PK_LECTURE PRIMARY KEY(LEC_NO);
    
ALTER TABLE STUDENT
    ADD CONSTRAINT FK_STUDENT_PROFESSOR FOREIGN KEY(PRO_NO)
        REFERENCES PROFESSOR(PRO_NO)
            ON DELETE SET NULL;
        
ALTER TABLE ENROLL
    ADD CONSTRAINT FK_ENROLL_COURSE FOREIGN KEY(COURSE_NO)
        REFERENCES COURSE(COURSE_NO)
             ON DELETE CASCADE;
ALTER TABLE ENROLL
    ADD CONSTRAINT FK_ENROLL_STUDENT FOREIGN KEY(STU_NO)
        REFERENCES STUDENT(STU_NO)
             ON DELETE CASCADE;
ALTER TABLE LECTURE
    ADD CONSTRAINT FK_LECTURE_PROFESSOR FOREIGN KEY(PRO_NO)
        REFERENCES PROFESSOR(PRO_NO)
             ON DELETE CASCADE;
ALTER TABLE LECTURE
    ADD CONSTRAINT FK_LECTURE_ENROLL FOREIGN KEY(ENROLL_NO)
        REFERENCES ENROLL(ENROLL_NO)
            ON DELETE CASCADE;
            
-- 1. PROFESSOR 테이블 데이터 입력
INSERT INTO PROFESSOR(P_NO, P_NAME, P_MAJOR) VALUES (1, '제임스', '전산');
INSERT INTO PROFESSOR(P_NO, P_NAME, P_MAJOR) VALUES (2, '앨리스', '회계');
INSERT INTO PROFESSOR(P_NO, P_NAME, P_MAJOR) VALUES (3, '스미스', '영화');

-- 2. COURSE 테이블 데이터 입력
INSERT INTO COURSE(C_NO, C_NAME, C_UNIT) VALUES (11, '자바', 3);
INSERT INTO COURSE(C_NO, C_NAME, C_UNIT) VALUES (22, '데이터베이스', 3);
INSERT INTO COURSE(C_NO, C_NAME, C_UNIT) VALUES (33, '서버프로그램', 3);

-- 3. STUDENT 테이블 데이터 입력
INSERT INTO STUDENT(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES (10101, '김학생', '서울', 1, 3);
INSERT INTO STUDENT(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES (10102, '이학생', '경기', 1, 3);
INSERT INTO STUDENT(S_NO, S_NAME, S_ADDRESS, S_GRADE_NO, P_NO) VALUES (10103, '최학생', '인천', 1, 3);

-- 4. ENROLL 테이블 데이터 입력
INSERT INTO ENROLL(E_NO, S_NO, C_NO, E_DATE) VALUES (111, 10101, 11, '20-02-25');
INSERT INTO ENROLL(E_NO, S_NO, C_NO, E_DATE) VALUES (222, 10101, 22, '20-02-26');
INSERT INTO ENROLL(E_NO, S_NO, C_NO, E_DATE) VALUES (333, 10101, 33, '20-02-27');

-- 5. LECTURE 테이블 데이터 입력
INSERT INTO LECTURE(L_NO, P_NO, E_NO, L_NAME, L_LOCATION) VALUES (1111, 1, 111, '자바완전정복', 'A101');
INSERT INTO LECTURE(L_NO, P_NO, E_NO, L_NAME, L_LOCATION) VALUES (2222, 1, 111, '자바완전정복', 'B101');
INSERT INTO LECTURE(L_NO, P_NO, E_NO, L_NAME, L_LOCATION) VALUES (3333, 1, 111, '자바완전정복', 'C101');

-- 6. 변경된 내용을 DB에 반영
COMMIT;  -- INSERT, UPDATE, DELETE 문은 COMMIT이 필요함.
